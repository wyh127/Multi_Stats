parcoord(car_dat[, 1:13])
parcoord(car_dat[, 2:13])
car_dat
is.na(car_dat)
parcoord(car_dat[, 2:13])
parcoord(car_dat[, 6:13])
parcoord(car_dat[, 5:13])
parcoord(car_dat[, 6:13])
parcoord(sapply(car_dat[,1:13],as.numeric))
car_dat
car_dat <- read.table("/Users/apple/Desktop/semester_2/2.Multi_Stat_Infe/mvadata/car.dat")
car_dat <- sapply(car_dat[,1:13], as.numeric)
parcoord(car_dat)
car_dat
pairs(car_dat[, c(1, 2, 8, 9)])
car_dat
pairs(car_dat[, c(1, 2, 8, 9)])
cov(car_dat$V2, car_dat$V8)
car_dat$V8
car_dat$V2
car_dat
cov(car_dat$V2, car_dat$V8)
cov(car_dat[, 2], car_dat[, 8])
car_dat <- read.table("/Users/apple/Desktop/semester_2/2.Multi_Stat_Infe/mvadata/car.dat")
cov(car_dat[, 2], car_dat[, 8])
knitr::opts_chunk$set(echo = TRUE)
plots(density(diagonal[1:100], bw = h1, kernel = "gaussian"))
plot(density(diagonal[1:100], bw = h1, kernel = "gaussian"))
plot(density(diagonal[1:100], bw = h1, kernel = "gaussian"))
lines(density(diagonal[101:200], bw = h2, kernel = "gaussian"))
plot(density(diagonal[1:100], bw = h1, kernel = "gaussian"), xlim=c(137, 143))
lines(density(diagonal[101:200], bw = h2, kernel = "gaussian"))
plot(density(diagonal[1:100], bw = h1, kernel = "gaussian"), xlim=c(137, 143), main = "Swiss bank notes")
lines(density(diagonal[101:200], bw = h2, kernel = "gaussian"))
plot(density(diagonal[1:100], bw = h1, kernel = "gaussian"), xlim=c(137, 143),
main = "Swiss bank notes", col = "red")
lines(density(diagonal[101:200], bw = h2, kernel = "gaussian"))
plot(density(diagonal[1:100], bw = h1, kernel = "gaussian"), xlim=c(137, 143),
main = "Swiss bank notes")
lines(density(diagonal[101:200], bw = h2, kernel = "gaussian"), col = "red")
legend(139.5, 0.8, legend=c("h: pooled bandwidth", "h1: bandwidth for genuine group"),
col=c("red", "black"), lty = 1, cex = 0.8)
plot(density(diagonal[1:100], bw = h1, kernel = "gaussian"), xlim=c(137, 143),
main = "Swiss bank notes")
lines(density(diagonal[101:200], bw = h2, kernel = "gaussian"), col = "red")
legend(137.5, 0.8, legend=c("counterfeit", "genuine"),
col=c("red", "black"), lty = 1, cex = 0.8)
parcoord(sapply(car_dat[, 1:13],as.numeric), col=as.numeric(carc$C), lty=as.numeric(carc$C)-(carc$C=="Europe")+(carc$C=="Japan"), lwd=1, main="Cars data")
library("MASS")
parcoord(sapply(car_dat[, 1:13],as.numeric), col=as.numeric(carc$C), lty=as.numeric(carc$C)-(carc$C=="Europe")+(carc$C=="Japan"), lwd=1, main="Cars data")
parcoord(sapply(car_dat[, 1:13],as.numeric))
car_dat <- read.table("/Users/apple/Desktop/semester_2/2.Multi_Stat_Infe/mvadata/car.dat")
car_dat <- sapply(car_dat[,1:13], as.numeric)
parcoord(car_dat)
car_dat <- read.table("/Users/apple/Desktop/semester_2/2.Multi_Stat_Infe/mvadata/car.dat")
car_dat <- sapply(car_dat[,1:13], as.numeric)
parcoord(car_dat)
pair(pop_dat)
pairs(pop_dat)
pop_dat
pop_dat
pairs(pop_dat)
hist(pop_dat$V3)
hist(pop_dat$V3)
hist(pop_dat$V2)
pairs(pop_dat)
andcur <- function(x, t) {
res <- c()
for(i in t) {
res <- c(res, x[1]/sqrt(2) + x[2]*sin(i) + x[3]*cos(i))
}
res <- unlist(res)
res <- (res-42000)/100
return(res)
}
plot(t_range, andcur(first_ten[1, ], t_range), type = "l", ylab = "andrew curve")
plot(t_range, andcur(first_ten[1, ], t_range), type = "l", ylab = "andrew curve")
for(i in 2:5) {
lines(t_range, andcur(first_ten[i, ], t_range))
}
plot(t_range, andcur(first_ten[1, ], t_range), type = "l", ylab = "andrew curve")
for(i in 2:5) {
lines(t_range, andcur(first_ten[i, ], t_range))
}
for(i in 6:10) {
lines(t_range, andcur(first_ten[i, ], t_range), col = "red")
}
andcur <- function(x, t) {
res <- c()
for(i in t) {
res <- c(res, x[2]/sqrt(2) + x[3]*sin(i) + x[3]*cos(i))
}
res <- unlist(res)
res <- (res-42000)/100
return(res)
}
first_ten <- pop_dat[10:19, ]
t_range <- seq(-pi, pi, 0.01)
plot(t_range, andcur(first_ten[1, ], t_range), type = "l", ylab = "andrew curve")
for(i in 2:5) {
lines(t_range, andcur(first_ten[i, ], t_range))
}
for(i in 6:10) {
lines(t_range, andcur(first_ten[i, ], t_range), col = "red")
}
plot(t_range, andcur(first_ten[1, ], t_range), type = "l", ylab = "andrew curve", ylim = c(0, 25))
for(i in 2:5) {
lines(t_range, andcur(first_ten[i, ], t_range))
}
for(i in 6:10) {
lines(t_range, andcur(first_ten[i, ], t_range), col = "red")
}
plot(t_range, andcur(first_ten[1, ], t_range), type = "l", ylab = "andrew curve", ylim = c(0, 30))
for(i in 2:5) {
lines(t_range, andcur(first_ten[i, ], t_range))
}
for(i in 6:10) {
lines(t_range, andcur(first_ten[i, ], t_range), col = "red")
}
plot(t_range, andcur(first_ten[1, ], t_range), type = "l", ylab = "andrew curve",
ylim = c(0, 35), xlab = "x")
for(i in 2:5) {
lines(t_range, andcur(first_ten[i, ], t_range))
}
for(i in 6:10) {
lines(t_range, andcur(first_ten[i, ], t_range), col = "red")
}
plot(t_range, andcur(first_ten[1, ], t_range), type = "l", ylab = "andrew curve",
ylim = c(0, 32), xlab = "x")
for(i in 2:5) {
lines(t_range, andcur(first_ten[i, ], t_range))
}
for(i in 6:10) {
lines(t_range, andcur(first_ten[i, ], t_range), col = "red")
}
boxplot(pop_dat$V1)
boxplot(pop_dat$V2)
pop_dat
pairs(pop_dat)
hist(pop_dat$V2)
boxplot(pop_dat$V2, main = "population")
ten_obs <- pop_dat[1:20, ]
t_range <- seq(-pi, pi, 0.01)
plot(t_range, andcur(ten_obs[1, ], t_range), type = "l", ylab = "andrew curve",
ylim = c(0, 32), xlab = "x")
for(i in 2:10) {
lines(t_range, andcur(ten_obs[i, ], t_range))
}
for(i in 11:20) {
lines(t_range, andcur(ten_obs[i, ], t_range), col = "red")
}
plot(t_range, andcur(ten_obs[1, ], t_range), type = "l", ylab = "andrew curve",
ylim = c(-10, 32), xlab = "x")
for(i in 2:10) {
lines(t_range, andcur(ten_obs[i, ], t_range))
}
for(i in 11:20) {
lines(t_range, andcur(ten_obs[i, ], t_range), col = "red")
}
plot(t_range, andcur(ten_obs[1, ], t_range), type = "l", ylab = "andrew curve",
ylim = c(-20, 32), xlab = "x")
for(i in 2:10) {
lines(t_range, andcur(ten_obs[i, ], t_range))
}
for(i in 11:20) {
lines(t_range, andcur(ten_obs[i, ], t_range), col = "red")
}
plot(t_range, andcur(ten_obs[1, ], t_range), type = "l", ylab = "andrew curve",
ylim = c(-30, 32), xlab = "x")
for(i in 2:10) {
lines(t_range, andcur(ten_obs[i, ], t_range))
}
for(i in 11:20) {
lines(t_range, andcur(ten_obs[i, ], t_range), col = "red")
}
plot(t_range, andcur(ten_obs[1, ], t_range), type = "l", ylab = "andrew curve",
ylim = c(-30, 32), xlab = "x")
for(i in 2:10) {
lines(t_range, andcur(ten_obs[i, ], t_range))
}
for(i in 15:20) {
lines(t_range, andcur(ten_obs[i, ], t_range), col = "red")
}
summary(pop_dat$V2)
pairs(car_dat[, c(1, 2, 8, 9)])
car_dat
load("/Users/apple/Desktop/semester_2/2.Multi_Stat_Infe/data/carc.rda")
carc
knitr::opts_chunk$set(echo = TRUE)
bank_dat <- load("/Users/apple/Desktop/semester_2/2.Multi_Stat_Infe/data/bank2.rda")
bank_dat
bank_dat
bank2
load("/Users/apple/Desktop/semester_2/2.Multi_Stat_Infe/data/bank2.rda")
diagonal <- bank2$Diagonal
h1 <- 1.06*sd(diagonal[1:100])*length(diagonal[1:100])^(-1/5)
hist(diagonal[1:100], probability = T, ylim = c(0, 1), main = "genuine group")
lines(density(diagonal[1:100], bw = h, kernel = "gaussian"), col = "red")
lines(density(diagonal[1:100], bw = h1, kernel = "gaussian"))
legend(139.5, 0.8, legend=c("h: pooled bandwidth", "h1: bandwidth for genuine group"),
col=c("red", "black"), lty = 1, cex = 0.8)
h2 <- 1.06*sd(diagonal[101:200])*length(diagonal[101:200])^(-1/5)
hist(diagonal[101:200], probability = T, main = "counterfeit group")
lines(density(diagonal[101:200], bw = h, kernel = "gaussian"), col = "red")
lines(density(diagonal[101:200], bw = h2, kernel = "gaussian"))
legend(137.5, 0.6, legend=c("h: pooled bandwidth", "h2: bandwidth for counterfeit group"),
col=c("red", "black"), lty = 1, cex = 0.6)
plot(density(diagonal[1:100], bw = h1, kernel = "gaussian"), xlim=c(137, 143),
main = "Swiss bank notes")
lines(density(diagonal[101:200], bw = h2, kernel = "gaussian"), col = "red")
legend(137.5, 0.8, legend=c("counterfeit", "genuine"),
col=c("red", "black"), lty = 1, cex = 0.8)
load("/Users/apple/Desktop/semester_2/2.Multi_Stat_Infe/data/carc.dat")
load("/Users/apple/Desktop/semester_2/2.Multi_Stat_Infe/data/carc.rda")
carc
car_dat <- sapply(car_dat[,1:13], as.numeric)
parcoord(car_dat)
library("MASS")
parcoord(car_dat)
car_dat <- sapply(carc[,1:13], as.numeric)
parcoord(car_dat)
load("/Users/apple/Desktop/semester_2/2.Multi_Stat_Infe/data/annualpopu.rda")
annualpopu
boxplot(annualpopu$Inhabitants, main = "population")
boxplot(annualpopu$Unemployed, main = "unemployment")
andcur <- function(x, t) {
res <- c()
for(i in t) {
res <- c(res, x[2]/sqrt(2) + x[3]*sin(i) + x[3]*cos(i))
}
res <- unlist(res)
res <- (res-42000)/100
return(res)
}
obs <- annualpopu[1:20, ]
t_range <- seq(-pi, pi, 0.01)
plot(t_range, andcur(obs[1, ], t_range), type = "l", ylab = "andrew curve",
ylim = c(-30, 32), xlab = "x")
for(i in 2:10) {
lines(t_range, andcur(obs[i, ], t_range))
}
for(i in 15:20) {
lines(t_range, andcur(obs[i, ], t_range), col = "red")
}
pairs(annualpopu)
hist(annualpopu$Inhabitants)
pairs(carc[, c(1, 2, 8, 9)])
for (k in 0:15) {
i = (k %/% 4) + 1                              # div, ith raw
j = (k %% 4) + 1                               # mod, jth column
if (i>j) {
plot(x[,i]~x[,j], xlab = "", ylab = "", axes=FALSE, frame.plot=TRUE,pch=as.numeric(carc$C)-1-(carc$C=="Europe")+(carc$C=="Japan"),cex=1.5)
}
if (i == j) {
plot(0~0,xlab = "", ylab = "", axes=FALSE, xlim=c(1,5), ylim=c(1,5), frame.plot=TRUE)
text(2,4.5, y[i], cex=1.5)                   # print text on diagonal graphs
}
}
x = cbind(carc[,1], carc[,2], carc[,8], carc[,9])
y = c("price", "mileage", "weight", "length")
p = dim(x)[2]
n = dim(x)[1]
par(mfrow=c(p,p), mar = 0.2 + c(0,0,0,0))        # creates display pxp with margins=0.2
for (k in 0:15) {
i = (k %/% 4) + 1                              # div, ith raw
j = (k %% 4) + 1                               # mod, jth column
if (i>j) {
plot(x[,i]~x[,j], xlab = "", ylab = "", axes=FALSE, frame.plot=TRUE,pch=as.numeric(carc$C)-1-(carc$C=="Europe")+(carc$C=="Japan"),cex=1.5)
}
if (i == j) {
plot(0~0,xlab = "", ylab = "", axes=FALSE, xlim=c(1,5), ylim=c(1,5), frame.plot=TRUE)
text(2,4.5, y[i], cex=1.5)                   # print text on diagonal graphs
}
}
for (k in 0:15) {
i = (k %/% 4) + 1                              # div, ith raw
j = (k %% 4) + 1                               # mod, jth column
if (i!=j) {
plot(x[,i]~x[,j], xlab = "", ylab = "", axes=FALSE, frame.plot=TRUE,pch=as.numeric(carc$C)-1-(carc$C=="Europe")+(carc$C=="Japan"),cex=1.5)
}
if (i == j) {
plot(0~0,xlab = "", ylab = "", axes=FALSE, xlim=c(1,5), ylim=c(1,5), frame.plot=TRUE)
text(2,4.5, y[i], cex=1.5)                   # print text on diagonal graphs
}
}
par(mfrow=c(p,p), mar = 0.2 + c(0,0,0,0))        # creates display pxp with margins=0.2
for (k in 0:15) {
i = (k %/% 4) + 1                              # div, ith raw
j = (k %% 4) + 1                               # mod, jth column
if (i!=j) {
plot(x[,i]~x[,j], xlab = "", ylab = "", axes=FALSE, frame.plot=TRUE,pch=as.numeric(carc$C)-1-(carc$C=="Europe")+(carc$C=="Japan"),cex=1.5)
}
if (i == j) {
plot(0~0,xlab = "", ylab = "", axes=FALSE, xlim=c(1,5), ylim=c(1,5), frame.plot=TRUE)
text(2,4.5, y[i], cex=1.5)                   # print text on diagonal graphs
}
}
par(mfrow=c(p,p), mar = 0.2 + c(0,0,0,0))        # creates display pxp with margins=0.2
for (k in 0:15) {
i = (k %/% 4) + 1                              # div, ith raw
j = (k %% 4) + 1                               # mod, jth column
if (i>j) {
plot(x[,i]~x[,j], xlab = "", ylab = "", axes=FALSE, frame.plot=TRUE,pch=as.numeric(carc$C)-1-(carc$C=="Europe")+(carc$C=="Japan"),cex=1.5)
}
if (i<j) {
plot(x[,j]~x[,i], xlab = "", ylab = "", axes=FALSE, frame.plot=TRUE,pch=as.numeric(carc$C)-1-(carc$C=="Europe")+(carc$C=="Japan"),cex=1.5)
}
if (i == j) {
plot(0~0,xlab = "", ylab = "", axes=FALSE, xlim=c(1,5), ylim=c(1,5), frame.plot=TRUE)
text(2,4.5, y[i], cex=1.5)                   # print text on diagonal graphs
}
}
par(mfrow=c(p,p), mar = 0.2 + c(0,0,0,0))        # creates display pxp with margins=0.2
for (k in 0:15) {
i = (k %/% 4) + 1                              # div, ith raw
j = (k %% 4) + 1                               # mod, jth column
if (i>j) {
plot(x[,i]~x[,j], xlab = "", ylab = "", axes=FALSE, frame.plot=TRUE,pch=as.numeric(carc$C)-1-(carc$C=="Europe")+(carc$C=="Japan"),cex=1.5)
}
if (i<j) {
plot(x[,i]~x[,j], xlab = "", ylab = "", axes=FALSE, frame.plot=TRUE,pch=as.numeric(carc$C)-1-(carc$C=="Europe")+(carc$C=="Japan"),cex=1.5)
}
if (i == j) {
plot(0~0,xlab = "", ylab = "", axes=FALSE, xlim=c(1,5), ylim=c(1,5), frame.plot=TRUE)
text(2,4.5, y[i], cex=1.5)                   # print text on diagonal graphs
}
}
par(mfrow=c(p,p), mar = 0.2 + c(0,0,0,0))        # creates display pxp with margins=0.2
for (k in 0:15) {
i = (k %/% 4) + 1                              # div, ith raw
j = (k %% 4) + 1                               # mod, jth column
if (i>j) {
plot(x[,i]~x[,j], xlab = "", ylab = "", axes=FALSE, frame.plot=TRUE,pch=as.numeric(carc$C)-1-(carc$C=="Europe")+(carc$C=="Japan"),cex=1.5)
}
if (i<j) {
plot(x[,j]~x[,i], xlab = "", ylab = "", axes=FALSE, frame.plot=TRUE,pch=as.numeric(carc$C)-1-(carc$C=="Europe")+(carc$C=="Japan"),cex=1.5)
}
if (i == j) {
plot(0~0,xlab = "", ylab = "", axes=FALSE, xlim=c(1,5), ylim=c(1,5), frame.plot=TRUE)
text(2,4.5, y[i], cex=1.5)                   # print text on diagonal graphs
}
}
par(mfrow=c(p,p), mar = 0.2 + c(0,0,0,0))        # creates display pxp with margins=0.2
for (k in 0:15) {
i = (k %/% 4) + 1                              # div, ith raw
j = (k %% 4) + 1                               # mod, jth column
if (i>j) {
plot(x[,i]~x[,j], xlab = "", ylab = "", axes=FALSE, frame.plot=TRUE,pch=as.numeric(carc$C)-1-(carc$C=="Europe")+(carc$C=="Japan"),cex=1.5)
}
if (i<j) {
plot(x[,i]~x[,j], xlab = "", ylab = "", axes=FALSE, frame.plot=TRUE,pch=as.numeric(carc$C)-1-(carc$C=="Europe")+(carc$C=="Japan"),cex=1.5)
}
if (i == j) {
plot(0~0,xlab = "", ylab = "", axes=FALSE, xlim=c(1,5), ylim=c(1,5), frame.plot=TRUE)
text(2,4.5, y[i], cex=1.5)                   # print text on diagonal graphs
}
}
par(mfrow=c(p,p), mar = 0.2 + c(0,0,0,0))        # creates display pxp with margins=0.2
for (k in 0:15) {
i = (k / 4) + 1                              # div, ith raw
j = (k %% 4) + 1                               # mod, jth column
if (i>j) {
plot(x[,i]~x[,j], xlab = "", ylab = "", axes=FALSE, frame.plot=TRUE,pch=as.numeric(carc$C)-1-(carc$C=="Europe")+(carc$C=="Japan"),cex=1.5)
}
if (i<j) {
plot(x[,i]~x[,j], xlab = "", ylab = "", axes=FALSE, frame.plot=TRUE,pch=as.numeric(carc$C)-1-(carc$C=="Europe")+(carc$C=="Japan"),cex=1.5)
}
if (i == j) {
plot(0~0,xlab = "", ylab = "", axes=FALSE, xlim=c(1,5), ylim=c(1,5), frame.plot=TRUE)
text(2,4.5, y[i], cex=1.5)                   # print text on diagonal graphs
}
}
4 %/% 4
0 %/% 4
1 %/% 4
par(mfrow=c(p,p), mar = 0.2 + c(0,0,0,0))        # creates display pxp with margins=0.2
for (k in 0:15) {
i = (k %/% 4) + 1                              # div, ith raw
j = (k %% 4) + 1                               # mod, jth column
if (i>j) {
plot(x[,i]~x[,j], xlab = "", ylab = "", axes=FALSE, frame.plot=TRUE,pch=as.numeric(carc$C)-1-(carc$C=="Europe")+(carc$C=="Japan"),cex=1.5)
}
if (i<j) {
plot(x[,i]~x[,j], xlab = "", ylab = "", axes=FALSE, frame.plot=TRUE,pch=as.numeric(carc$C)-1-(carc$C=="Europe")+(carc$C=="Japan"),cex=1.5)
}
if (i == j) {
plot(0~0,xlab = "", ylab = "", axes=FALSE, xlim=c(1,5), ylim=c(1,5), frame.plot=TRUE)
text(2,4.5, y[i], cex=1.5)                   # print text on diagonal graphs
}
}
as.numeric(carc$C)-1-(carc$C=="Europe")+(carc$C=="Japan")
carc$C=="Europe"
as.numeric(carc$C)-1-(carc$C=="Europe")
as.numeric(carc$C)
as.numeric(carc$C)-1
x = cbind(carc[,1], carc[,2], carc[,8], carc[,9])
y = c("price", "mileage", "weight", "length")
p = dim(x)[2]
par(mfrow=c(p,p), mar = 0.2 + c(0,0,0,0))        # creates display pxp with margins=0.2
for (k in 0:15) {
i = (k %/% 4) + 1                              # div, ith raw
j = (k %% 4) + 1                               # mod, jth column
if (i>j) {
plot(x[,i]~x[,j], xlab = "", ylab = "", axes=FALSE, frame.plot=TRUE,pch=as.numeric(carc$C)-1-(carc$C=="Europe")+(carc$C=="Japan"),cex=1.5)
}
if (i<j) {
plot(x[,i]~x[,j], xlab = "", ylab = "", axes=FALSE, frame.plot=TRUE,pch=as.numeric(carc$C)-1-(carc$C=="Europe")+(carc$C=="Japan"),cex=1.5)
}
if (i == j) {
plot(0~0,xlab = "", ylab = "", axes=FALSE, xlim=c(1,5), ylim=c(1,5), frame.plot=TRUE)
text(2,4.5, y[i], cex=1.5)                   # print text on diagonal graphs
}
}
5 // 2
5 / 2
par(mfrow=c(p,p), mar = 0.2 + c(0,0,0,0))        # creates display pxp with margins=0.2
for (k in 0:15) {
i = (k %/% 4) + 1                              # div, ith raw
j = (k %% 4) + 1                               # mod, jth column
if (i>j) {
plot(x[,i]~x[,j], xlab = "", ylab = "", axes=FALSE, frame.plot=TRUE,pch=as.numeric(carc$C)-1-(carc$C=="Europe")+(carc$C=="Japan"),cex=1.5)
}
if (i<j) {
plot(x[,i]~x[,j], xlab = "", ylab = "", axes=FALSE, frame.plot=TRUE,pch=as.numeric(carc$C)-1-(carc$C=="Europe")+(carc$C=="Japan"),cex=1.5)
}
if (i == j) {
plot(0~0,xlab = "", ylab = "", axes=FALSE, xlim=c(1,5), ylim=c(1,5), frame.plot=TRUE)
text(2,4.5, y[i], cex=1.5)                   # print text on diagonal graphs
}
}
cov(bank2$`Inner Frame Lower`, bank2$`Inner Frame Upper`)
jd$values
prod()
prod(jd$values)
det(A)
trace(A)
diag(A)
sum(diag(A))
sum(jd$values) == sum(diag(A))
sum(jd$values)
sum(diag(A))
prod(jd$values) == det(A)
prod(jd$values)
det(A)
sum(jd$values)
sum(diag(A))
lda^(-1)
gma %*% solve(lda) %*% t(gma)
gma %*% solve(lda) %*% t(gma)
solve(A)
lda**2
gma %*% lda**2 %*% t(gma)
A %*% A
plot(bank_dat$V4, bank_dat$V5, xlab = "X4", ylab = "X5")
plot(bank2$`Inner Frame Lower`, bank2$`Inner Frame Upper`, xlab = "X4", ylab = "X5")
cov(bank2[1:100, ]$`Inner Frame Lower`, bank2[1:100, ]$`Inner Frame Upper`)
cov(bank2[101:200, ]$`Inner Frame Lower`, bank2[101:200, ]$`Inner Frame Upper`)
cov(bank2[1:100, ]$`Inner Frame Lower`, bank2[1:100, ]$`Inner Frame Upper`)
cov(bank2[101:200, ]$`Inner Frame Lower`, bank2[101:200, ]$`Inner Frame Upper`)
cov(carc[, 2], carc[, 8])
head(carc)
carc[, 2]
carc$M
nrow(pullover)
load("/Users/apple/Desktop/semester_2/2.Multi_Stat_Infe/data/pullover.rda")
nrow(pullover)
n_pullover <- nrow(pullover)
cor(pullover)
W <- 1/2 * log((1+cor(pullover)[1, 2]) / (1-cor(pullover)[1, 2]))
mu <- 0
var <- 1/(n_pullover-3)
z <- (W-mu)/sqrt(var)
z
pullover_lm <- lm(Sales ~ Price, pullover)
predict(pullover_lm, data.frame(Price = 105))
h1 <- 1.06*sd(diagonal[1:100])*length(diagonal[1:100])^(-1/5)
hist(diagonal[1:100], probability = T, ylim = c(0, 1), main = "genuine group")
lines(density(diagonal[1:100], bw = h, kernel = "gaussian"), col = "red")
lines(density(diagonal[1:100], bw = h1, kernel = "gaussian"))
legend(139.5, 0.8, legend=c("h: pooled bandwidth", "h1: bandwidth for genuine group"),
col=c("red", "black"), lty = 1, cex = 0.8)
knitr::opts_chunk$set(echo = TRUE)
W1 <- 1/2 * log((1+cor(pullover)[1, 4]) / (1-cor(pullover)[1, 4]))
var1 <- 1/(n_pullover-3)
tanh(W1 - 1.96*sqrt(var1))
tanh(W1 + 1.96*sqrt(var1))
pullover_yen <- pullover
pullover_yen[, 2] <- pullover_yen[, 2]*106
pullover_yen[, 3] <- pullover_yen[, 3]*106
cov(pullover)
cov(pullover_yen)
cov(pullover)
cov(pullover_dat)
h1 <- 1.06*sd(diagonal[1:100])*length(diagonal[1:100])^(-1/5)
hist(diagonal[1:100], probability = T, ylim = c(0, 1), main = "genuine group")
lines(density(diagonal[1:100], bw = h, kernel = "gaussian"), col = "red")
lines(density(diagonal[1:100], bw = h1, kernel = "gaussian"))
legend(139.5, 0.8, legend=c("h: pooled bandwidth", "h1: bandwidth for genuine group"),
col=c("red", "black"), lty = 1, cex = 0.6)
h1 <- 1.06*sd(diagonal[1:100])*length(diagonal[1:100])^(-1/5)
hist(diagonal[1:100], probability = T, ylim = c(0, 1), main = "genuine group")
lines(density(diagonal[1:100], bw = h, kernel = "gaussian"), col = "red")
lines(density(diagonal[1:100], bw = h1, kernel = "gaussian"))
legend(139.5, 0.8, legend=c("h: pooled bandwidth", "h1: bandwidth for genuine group"),
col=c("red", "black"), lty = 1, cex = 0.8)
cov(pullover)
cov(pullover_yen)
cov(pullover) * 106**2
cov(pullover_yen[, 2], pullover_yen[, 3])
cov(pullover[, 2], pullover[, 3]) * 106*106
cov(pullover_yen[, 1], pullover_yen[, 2])
cov(pullover[, 1], pullover[, 2]) * 106
